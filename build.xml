<!-- Build BEAST FX. It is also used by Hudson BEAST_FX project. JUnit test is available for this build. -->
<project basedir="." default="build_jar_all_BeastFX" name="BUILD_BEAST_FX">
	<description>
	    Build BEAST FX. 
            Also used by Hudson BEAST_FX project. 
	    JUnit test is available for this build.
	    $Id: build_BEAST_FX.xml $
	</description>

	<!-- set global properties for this build -->
	<property name="srcFX" location="../BeastFX/src" />
	<property name="buildFX" location="../BeastFX/build" />
	<property name="libFX" location="../BeastFX/lib" />
	<property name="release_dir" value="release" />
	<property name="distFX" location="${buildFX}/dist" />
	<property name="beast2path" location="../beast2" />
	<property name="srcBeast2" location="${beast2path}/src" />
	<property name="beast2classpath" location="${beast2path}/build" />
	<property name="Add_on_dir" value="${release_dir}/add-on" />
	<property name="version" value="1.1.2" />

    <import file="${beast2path}/build.xml" />


	<property name="main_class_BEASTFX" value="beastfx.app.beastfx.BeastFX" />
	<property name="report" value="${buildFX}/junitreport"/>

	<path id="classpath">
        <pathelement path="${buildFX}"/>
		<fileset dir="${beast2path}/lib" includes="jam.jar"/>
		<fileset dir="${beast2path}/lib" includes="beagle.jar"/>
		<fileset dir="${beast2path}/lib" includes="fest.jar"/>
		<fileset dir="${beast2path}/lib" includes="colt.jar"/>
		<fileset dir="${beast2path}/lib" includes="junit-4.8.2.jar"/>
        <pathelement path="${beast2classpath}"/>
	</path>

	<!-- start -->
	<target name="initBeastFX">
		<echo message="${ant.project.name}: ${ant.file}" />
	</target>

	<target name="cleanBeastFX">
    	<delete dir="${buildFX}" />
	</target>

	<!-- clean previous build, and then compile Java source code, and Juint test -->
	<target name="build_all_BeastFX" depends="cleanBeastFX,compile-allBeastFX,junitBeastFX"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- clean previous build, compile Java source code, and Junit test, and make the beast.jar and beauti.jar -->
	<target name="build_jar_all_BeastFX" depends="cleanBeastFX,compile-allBeastFX,junitBeastFX,dist_all_BeastFX"
        description="Clean and Build all run-time stuff">
	</target>


	<!-- No JUnit Test, clean previous build, compile Java source code, and make the BeastFX.jar and beauti.jar -->
	<target name="build_jar_all_BeastFX_NoJUnitTest" depends="cleanBeastFX,compile-allBeastFX,dist_all_BeastFX"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- compile Java source code -->
	<target name="compile-allBeastFX" depends="initBeastFX">

	    <!-- Capture the path as a delimited property using the refid attribute -->
	    <property name="myclasspath" refid="classpath"/>
	    <!-- Emit the property to the ant console -->
	    <echo message="Classpath = ${myclasspath}"/>

		<mkdir dir="${buildFX}" />

		<!-- Compile the java code from ${srcFX} into ${buildFX} /bin -->
		<javac srcdir="${srcFX}" destdir="${buildFX}" classpathref="classpath" 
		       fork="true"
		       memoryinitialsize="256m"
		       memorymaximumsize="1024m"
			   source="1.8"
		       target="1.8">
			<include name="beastfx/**/**" />
			<!-- compile JUnit test classes -->
			<include name="test/**" />
		</javac>

		<echo message="Successfully compiled." />
	</target>

	<!-- make the BeastFX.hjar and TreeAnnotator.jar -->
	<target name="dist_all_BeastFX" depends="compile-allBeastFX" description="create BeastFX jar">
		<!-- Create the distribution directory -->
		<mkdir dir="${distFX}" />

		<!-- Put everything in ${buildFX} into the beast.jar file -->
		<jar jarfile="${distFX}/BeastFX.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${main_class_BEASTFX}" />
			</manifest>
			<fileset dir="${buildFX}">
				<include name="**/*.class" />
				<include name="javascript/**/*" />
				<include name="beastfx*" />
			</fileset>
			<fileset dir="${beast2classpath}">
				<include name="**/*" />
			</fileset>
			<zipgroupfileset dir="${beast2path}/lib" includes="jam.jar" />
			<zipgroupfileset dir="${beast2path}/lib" includes="beagle.jar" />
			<zipgroupfileset dir="${beast2path}/lib" includes="colt.jar" />
			<zipgroupfileset dir="${beast2path}/lib" includes="commons-math3-3.1.1.jar" />
		</jar>

		<jar jarfile="${distFX}/BeastFX.src.jar">
			<fileset dir="${srcFX}">
				<include name="**/*" />
			</fileset>
		</jar>
		<jar jarfile="${distFX}/BeastFX.addon.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
			</manifest>
			<fileset dir="${buildFX}">
				<include name="**/*"/>
			</fileset>
		</jar>
	</target>

	<!-- run beast.jar -->
	<target name="run_BeastFX">
		<java jar="${distFX}/BeastFX.jar" fork="true" />
	</target>

	
	<!-- JUnit test -->
	<target name="junitBeastFX">
		<mkdir dir="${report}" />
		<junit printsummary="yes"> <!--showoutput='yes'-->
			<classpath>
				<path refid="classpath" />
				<path location="${buildFX}" />
			</classpath>

			<formatter type="xml" />

			<batchtest fork="yes" todir="${report}">
				<fileset dir="${srcFX}">
                    <include name="test/**/*Test.java"/>
                    <exclude name="test/beast/integration/**/*Test.java"/>
				</fileset>
				<fileset dir="${srcBeast2}">
                    <include name="test/beast/integration/**/*Test.java"/>                                         
                    <exclude name="test/beast/integration/**/ResumeTest.java"/>                                         
                    <exclude name="test/beast/integration/**/ExampleXmlParsingTest.java"/>                                         
				</fileset>
			</batchtest>
		</junit>
		<echo message="JUnit test finished." />
	</target>
    
        <target name="junitreport">
		<junitreport todir="${report}">
			<fileset dir="${report}" includes="*.xml"/>
			<report format="frames" todir="${report}"/>
		</junitreport>
		<echo message="JUnit test report finished." />
	</target>

	<target name="addon"
	        depends="build_jar_all_BeastFX_NoJUnitTest"
	        description="release BEAST 2 add-on version of BeastFX">

		<delete dir="${Add_on_dir}" />
		<!-- Create the release directory -->
		<mkdir dir="${Add_on_dir}" />
		<mkdir dir="${Add_on_dir}/lib" />
		<mkdir dir="${Add_on_dir}/examples" />
		<mkdir dir="${Add_on_dir}/templates" />
		<mkdir dir="${Add_on_dir}/html" />

		<copy todir="${Add_on_dir}">
			<fileset file="version.xml"/>
		</copy>
		<copy todir="${Add_on_dir}/examples">
			<fileset dir="examples" includes="*.xml">
			</fileset>
		</copy>

		<copy todir="${Add_on_dir}/html">
			<fileset dir="html" includes="**/*"/>
		</copy>

		<copy todir="${Add_on_dir}/lib">
			<fileset  file="${distFX}/BeastFX.addon.jar" />
		</copy>
		<copy todir="${Add_on_dir}">
			<fileset file="${distFX}/BeastFX.src.jar" />
		</copy>
<!--
		<copy todir="${Add_on_dir}/templates">
			<fileset file="templates/BeastFX.xml" />
		</copy>
-->
		<jar jarfile="${distFX}/BeastFX.addon.v${version}.zip">
			<fileset dir="${Add_on_dir}">
				<include name="**/*" />
			</fileset>
        </jar>
		<echo message="Add-on version release is finished." />
	</target>

</project>
